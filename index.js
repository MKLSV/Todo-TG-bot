const TelegramBot = require('node-telegram-bot-api');
const { getData } = require('./service');

const token = "8022738459:AAHqxjyrBwhVFVAU9Q1925rzSC9gEanEtbY"
const TELEGRAM_CHAT_MT = "555207329"
const TELEGRAM_CHAT_DEA = "644190724"
const webAppUrl = 'https://tg-web-bot-app-react.vercel.app';

const bot = new TelegramBot(token, { polling: true });

const menuKeyboard = {
    reply_markup: {
        keyboard: [
            [{ text: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ –∑–∞–¥–∞—á–∏' }], [{ text: '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É' }, { text: '–ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞' }]
        ],
        // resize_keyboard: true,
        one_time_keyboard: false
    }
};

bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä–∏ –ª—é–±–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏, –∫—Ä–æ–º–µ –∫–æ–º–∞–Ω–¥—ã /start
    if (text !== '/start') {
        if (['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ –∑–∞–¥–∞—á–∏', '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É', '–ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞'].includes(text)) {
            // –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
            if (text === '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ –∑–∞–¥–∞—á–∏') {
                const tasks = await getData(chatId)
                if (tasks == 0) {
                    await bot.sendMessage(chatId, '–ù–µ—Ç –∑–∞–¥–∞—á –Ω–∞ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è... –ö–∞–π—Ñ—É–π, –æ—Ç–¥—ã—Ö–∞–πüòé');
                } else {
                    await bot.sendMessage(chatId, '–í–æ—Ç –≤–∞—à–∏ –±–ª–∏–∂–∞–π—à–∏–µ –∑–∞–¥–∞—á–∏:');
                    await bot.sendMessage(chatId, tasks);
                }
            }
            if (text === '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É') {
                await bot.sendMessage(chatId, '–î–æ–±–∞–≤—å—Ç–µ –∑–∞–¥–∞—á—É –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ', {
                    reply_markup: {
                        inline_keyboard: [
                            [{ text: '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É', web_app: { url: webAppUrl } }]
                        ]
                    }
                });
            }
            if (text === '–ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞') {
                await bot.sendMessage(chatId, '–í—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞—á—É');
            }
        } else {
            await bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.', menuKeyboard);
        }

        return;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ /start
    await bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', menuKeyboard);

    await bot.sendMessage(chatId, '–ó–∞—Ö–æ–¥–∏ –≤ –Ω–∞—à –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ', {
        reply_markup: {
            inline_keyboard: [
                [{ text: '–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑', web_app: { url: webAppUrl } }]
            ]
        }
    });
});
